<?xml version='1.0' encoding='utf-8'?>
<scheme description="" title="Spectral power" version="2.0">
	<nodes>
		<node id="0" name="LSL Input" position="(0, 100)" project_name="Orange" qualified_name="Orange.widgets.network.owlslinput.OWLSLInput" title="LSL Input" version="" />
		<node id="1" name="LSL Output" position="(300, 0)" project_name="Orange" qualified_name="Orange.widgets.network.owlsloutput.OWLSLOutput" title="Raw Outlet" version="" />
		<node id="2" name="Select Range" position="(300, 200)" project_name="Orange" qualified_name="Orange.widgets.general.owselectrange.OWSelectRange" title="Select Range" version="" />
		<node id="3" name="Re-referencing" position="(400, 200)" project_name="Orange" qualified_name="Orange.widgets.filters.owrereferencing.OWRereferencing" title="Re-referencing" version="" />
		<node id="4" name="Moving Window Welch Spectrum" position="(500, 100)" project_name="Orange" qualified_name="Orange.widgets.spectral.owmovingwindowwelchspectrum.OWMovingWindowWelchSpectrum" title="Moving Window Welch Spectrum" version="" />
		<node id="5" name="Frequency Normalization" position="(600, 100)" project_name="Orange" qualified_name="Orange.widgets.filters.owfrequencynormalization.OWFrequencyNormalization" title="Frequency Normalization" version="" />
		<node id="6" name="LSL Output" position="(700, 0)" project_name="Orange" qualified_name="Orange.widgets.network.owlsloutput.OWLSLOutput" title="Spectrum Outlet" version="" />
		<node id="7" name="IIR Filter" position="(500, 300)" project_name="Orange" qualified_name="Orange.widgets.filters.owiirfilter.OWIIRFilter" title="IIR Bandpass" version="" />
		<node id="8" name="Squaring" position="(600, 300)" project_name="Orange" qualified_name="Orange.widgets.elementwise.owsquaring.OWSquaring" title="Squaring" version="" />
		<node id="9" name="Shift" position="(800, 300)" project_name="Orange" qualified_name="Orange.widgets.elementwise.owshift.OWShift" title="Logbias" version="" />
		<node id="10" name="Logarithm" position="(900, 300)" project_name="Orange" qualified_name="Orange.widgets.elementwise.owlogarithm.OWLogarithm" title="Logarithm" version="" />
		<node id="11" name="LSL Output" position="(1000, 200)" project_name="Orange" qualified_name="Orange.widgets.network.owlsloutput.OWLSLOutput" title="Alpha Outlet" version="" />
		<node id="12" name="Dejitter Timestamps" position="(100, 100)" project_name="Orange" qualified_name="Orange.widgets.utilities.owdejittertimestamps.OWDejitterTimestamps" title="Dejitter Timestamps" version="" />
		<node id="13" name="Time Series Plot" position="(1000, 400)" project_name="Orange" qualified_name="Orange.widgets.visualization.owtimeseriesplot.OWTimeSeriesPlot" title="Time Series Plot" version="" />
		<node id="14" name="Spectrum Plot" position="(700, 200)" project_name="Orange" qualified_name="Orange.widgets.visualization.owspectrumplot.OWSpectrumPlot" title="Spectrum Plot" version="" />
		<node id="15" name="Moving Average" position="(700, 300)" project_name="Orange" qualified_name="Orange.widgets.filters.owmovingaverage.OWMovingAverage" title="Moving Average" version="" />
	</nodes>
	<links>
		<link enabled="true" id="0" sink_channel="Data" sink_node_id="3" source_channel="Data" source_node_id="2" />
		<link enabled="true" id="1" sink_channel="Data" sink_node_id="4" source_channel="Data" source_node_id="3" />
		<link enabled="true" id="2" sink_channel="Data" sink_node_id="5" source_channel="Data" source_node_id="4" />
		<link enabled="true" id="3" sink_channel="Data" sink_node_id="6" source_channel="Data" source_node_id="5" />
		<link enabled="true" id="4" sink_channel="Data" sink_node_id="7" source_channel="Data" source_node_id="3" />
		<link enabled="true" id="5" sink_channel="Data" sink_node_id="8" source_channel="Data" source_node_id="7" />
		<link enabled="true" id="6" sink_channel="Data" sink_node_id="10" source_channel="Data" source_node_id="9" />
		<link enabled="true" id="7" sink_channel="Data" sink_node_id="11" source_channel="Data" source_node_id="10" />
		<link enabled="true" id="8" sink_channel="Data" sink_node_id="12" source_channel="Data" source_node_id="0" />
		<link enabled="true" id="9" sink_channel="Data" sink_node_id="1" source_channel="Data" source_node_id="12" />
		<link enabled="true" id="10" sink_channel="Data" sink_node_id="2" source_channel="Data" source_node_id="12" />
		<link enabled="true" id="11" sink_channel="Data" sink_node_id="13" source_channel="Data" source_node_id="10" />
		<link enabled="true" id="12" sink_channel="Data" sink_node_id="14" source_channel="Data" source_node_id="5" />
		<link enabled="true" id="13" sink_channel="Data" sink_node_id="15" source_channel="Data" source_node_id="8" />
		<link enabled="true" id="14" sink_channel="Data" sink_node_id="9" source_channel="Data" source_node_id="15" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties format="pickle" node_id="0">gAN9cQAoWA0AAABjaGFubmVsX25hbWVzcQFdcQJYDAAAAG1heF9ibG9ja2xlbnEDTQAEWAUAAABx
dWVyeXEEWAoAAAB0eXBlPSdFRUcncQVYDAAAAG5vbWluYWxfcmF0ZXEGTlgLAAAAZGlhZ25vc3Rp
Y3NxB05YDAAAAG1heF9jaHVua2xlbnEISwBYDAAAAG1hcmtlcl9xdWVyeXEJWAAAAABxClgKAAAA
bWF4X2J1ZmxlbnELSx5YBwAAAHJlY292ZXJxDIhYEwAAAHNhdmVkV2lkZ2V0R2VvbWV0cnlxDWNz
aXAKX3VucGlja2xlX3R5cGUKcQ5YDAAAAFB5UXQ0LlF0Q29yZXEPWAoAAABRQnl0ZUFycmF5cRBD
LgHZ0MsAAQAAAAAESAAAAhsAAAW3AAADPQAABEwAAAIyAAAFswAAAzkAAAAAAABxEYVxEodxE1Jx
FHUu
</properties>
		<properties format="pickle" node_id="1">gAN9cQAoWAkAAABjaHVua19sZW5xAUsAWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQJjc2lwCl91
bnBpY2tsZV90eXBlCnEDWAwAAABQeVF0NC5RdENvcmVxBFgKAAAAUUJ5dGVBcnJheXEFQy4B2dDL
AAEAAAAABEgAAAInAAAFtwAAAzEAAARMAAACPgAABbMAAAMtAAAAAAAAcQaFcQeHcQhScQlYCwAA
AHN0cmVhbV9uYW1lcQpYEQAAAG5ldXJvcHlwZTpSYXdEYXRhcQtYDAAAAHNlbmRfbWFya2Vyc3EM
TlgJAAAAc291cmNlX2lkcQ1YBwAAAG9pdW9oaWhxDlgFAAAAc3JhdGVxD05YCwAAAHN0cmVhbV90
eXBlcRBYBwAAAENvbnRyb2xxEVgMAAAAb25seV9zaWduYWxzcRKIWAsAAABtYXJrZXJfbmFtZXET
TlgMAAAAbWF4X2J1ZmZlcmVkcRRLPHUu
</properties>
		<properties format="literal" node_id="2">{'savedWidgetGeometry': None, 'selection': ':', 'unit': 'indices', 'axis': 'time'}</properties>
		<properties format="pickle" node_id="3">gAN9cQAoWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQFjc2lwCl91bnBpY2tsZV90eXBlCnECWAwA
AABQeVF0NC5RdENvcmVxA1gKAAAAUUJ5dGVBcnJheXEEQy4B2dDLAAEAAAAABEgAAAJKAAAFtwAA
Aw4AAARMAAACYQAABbMAAAMKAAAAAAAAcQWFcQaHcQdScQhYDgAAAHJlZmVyZW5jZV91bml0cQlY
BQAAAG5hbWVzcQpYDwAAAHJlZmVyZW5jZV9yYW5nZXELWAEAAAA6cQxYBAAAAGF4aXNxDVgFAAAA
c3BhY2VxDlgJAAAAZXN0aW1hdG9ycQ9YBAAAAG1lYW5xEHUu
</properties>
		<properties format="pickle" node_id="4">gAN9cQAoWAcAAABzY2FsaW5ncQFYBwAAAGRlbnNpdHlxAlgTAAAAc2F2ZWRXaWRnZXRHZW9tZXRy
eXEDY3NpcApfdW5waWNrbGVfdHlwZQpxBFgMAAAAUHlRdDQuUXRDb3JlcQVYCgAAAFFCeXRlQXJy
YXlxBkMuAdnQywABAAAAAARIAAACJwAABbcAAAMxAAAETAAAAj4AAAWzAAADLQAAAAAAAHEHhXEI
h3EJUnEKWAcAAABkZXRyZW5kcQtYCAAAAGNvbnN0YW50cQxYDwAAAHNlZ21lbnRfc2FtcGxlc3EN
TQABWA8AAABvdmVybGFwX3NhbXBsZXNxDk5YDQAAAHdpbmRvd19sZW5ndGhxD0sCWAYAAAB3aW5k
b3dxEFgEAAAAaGFubnERWAgAAABvbmVzaWRlZHESiHUu
</properties>
		<properties format="literal" node_id="5">{'savedWidgetGeometry': None}</properties>
		<properties format="pickle" node_id="6">gAN9cQAoWAkAAABjaHVua19sZW5xAUsAWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQJjc2lwCl91
bnBpY2tsZV90eXBlCnEDWAwAAABQeVF0NC5RdENvcmVxBFgKAAAAUUJ5dGVBcnJheXEFQy4B2dDL
AAEAAAAABEgAAAInAAAFtwAAAzEAAARMAAACPgAABbMAAAMtAAAAAAAAcQaFcQeHcQhScQlYCwAA
AHN0cmVhbV9uYW1lcQpYEgAAAG5ldXJvcHlwZTpTcGVjdHJ1bXELWAwAAABzZW5kX21hcmtlcnNx
DE5YCQAAAHNvdXJjZV9pZHENWAkAAABrdHJqZmhwb2txDlgFAAAAc3JhdGVxD05YCwAAAHN0cmVh
bV90eXBlcRBYBwAAAENvbnRyb2xxEVgMAAAAb25seV9zaWduYWxzcRKIWAsAAABtYXJrZXJfbmFt
ZXETTlgMAAAAbWF4X2J1ZmZlcmVkcRRLPHUu
</properties>
		<properties format="pickle" node_id="7">gAN9cQAoWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQFjc2lwCl91bnBpY2tsZV90eXBlCnECWAwA
AABQeVF0NC5RdENvcmVxA1gKAAAAUUJ5dGVBcnJheXEEQy4B2dDLAAEAAAAABEgAAAInAAAFtwAA
AzEAAARMAAACPgAABbMAAAMtAAAAAAAAcQWFcQaHcQdScQhYCgAAAHN0b3BfYXR0ZW5xCUdARAAA
AAAAAFgLAAAAZnJlcXVlbmNpZXNxCihLBksISwxLD3RxC1gEAAAAbW9kZXEMWAgAAABiYW5kcGFz
c3ENWAUAAABvcmRlcnEOTlgGAAAAZGVzaWducQ9YBgAAAGJ1dHRlcnEQWAwAAABvbmx5X3NpZ25h
bHNxEYhYBAAAAGF4aXNxElgEAAAAdGltZXETWAkAAABwYXNzX2xvc3NxFEdACAAAAAAAAHUu
</properties>
		<properties format="literal" node_id="8">{'savedWidgetGeometry': None, 'only_signals': True}</properties>
		<properties format="pickle" node_id="9">gAN9cQAoWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQFjc2lwCl91bnBpY2tsZV90eXBlCnECWAwA
AABQeVF0NC5RdENvcmVxA1gKAAAAUUJ5dGVBcnJheXEEQy4B2dDLAAEAAAAABEgAAAJjAAAFtwAA
AvUAAARMAAACegAABbMAAALxAAAAAAAAcQWFcQaHcQdScQhYBgAAAG9mZnNldHEJRz/wAAAAAAAA
WAwAAABvbmx5X3NpZ25hbHNxCoh1Lg==
</properties>
		<properties format="literal" node_id="10">{'savedWidgetGeometry': None, 'only_signals': True}</properties>
		<properties format="pickle" node_id="11">gAN9cQAoWAkAAABjaHVua19sZW5xAUsAWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQJjc2lwCl91
bnBpY2tsZV90eXBlCnEDWAwAAABQeVF0NC5RdENvcmVxBFgKAAAAUUJ5dGVBcnJheXEFQy4B2dDL
AAEAAAAABEgAAAInAAAFtwAAAzEAAARMAAACPgAABbMAAAMtAAAAAAAAcQaFcQeHcQhScQlYCwAA
AHN0cmVhbV9uYW1lcQpYFAAAAG5ldXJvcHlwZTpBbHBoYVBvd2VycQtYDAAAAHNlbmRfbWFya2Vy
c3EMTlgJAAAAc291cmNlX2lkcQ1YCQAAAGVqaWdvZWppb3EOWAUAAABzcmF0ZXEPTlgLAAAAc3Ry
ZWFtX3R5cGVxEFgHAAAAQ29udHJvbHERWAwAAABvbmx5X3NpZ25hbHNxEolYCwAAAG1hcmtlcl9u
YW1lcRNOWAwAAABtYXhfYnVmZmVyZWRxFEs8dS4=
</properties>
		<properties format="literal" node_id="12">{'warmup_samples': -1, 'force_monotonic': True, 'savedWidgetGeometry': None, 'max_updaterate': 500, 'forget_halftime': 300}</properties>
		<properties format="pickle" node_id="13">gAN9cQAoWAoAAAB0aW1lX3JhbmdlcQFHQBQAAAAAAABYEwAAAHNhdmVkV2lkZ2V0R2VvbWV0cnlx
AmNzaXAKX3VucGlja2xlX3R5cGUKcQNYDAAAAFB5UXQ0LlF0Q29yZXEEWAoAAABRQnl0ZUFycmF5
cQVDLgHZ0MsAAQAAAAAF2wAAAgcAAAdKAAADawAABd8AAAIeAAAHRgAAA2cAAAAAAABxBoVxB4dx
CFJxCVgMAAAAaW5pdGlhbF9kaW1zcQpOWAsAAABzdHJlYW1fbmFtZXELWAAAAABxDFgFAAAAc2Nh
bGVxDUc/uZmZmZmZmlgKAAAAbGluZV9jb2xvcnEOWAcAAAAjMDAwMDAwcQ9YCwAAAGRvd25zYW1w
bGVkcRCJWAgAAAB6ZXJvbWVhbnERiFgFAAAAdGl0bGVxElgQAAAAVGltZSBzZXJpZXMgdmlld3ET
WAoAAAB6ZXJvX2NvbG9ycRRYCQAAACM3RjdGN0Y3RnEVWAkAAABhdXRvc2NhbGVxFohYEAAAAGJh
Y2tncm91bmRfY29sb3JxF1gHAAAAI0ZGRkZGRnEYWAwAAABvbmx5X3NpZ25hbHNxGU5YCwAAAGFu
dGlhbGlhc2VkcRqJdS4=
</properties>
		<properties format="pickle" node_id="14">gAN9cQAoWAUAAABzY2FsZXEBRz9QYk3S8an8WBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQJjc2lw
Cl91bnBpY2tsZV90eXBlCnEDWAwAAABQeVF0NC5RdENvcmVxBFgKAAAAUUJ5dGVBcnJheXEFQy4B
2dDLAAEAAAAABEgAAAIRAAAFtwAAA0cAAARMAAACKAAABbMAAANDAAAAAAAAcQaFcQeHcQhScQlY
DAAAAGluaXRpYWxfZGltc3EKTlgQAAAAYmFja2dyb3VuZF9jb2xvcnELWAcAAAAjRkZGRkZGcQxY
CgAAAHplcm9fY29sb3JxDVgJAAAAIzdGN0Y3RjdGcQ5YBQAAAHRpdGxlcQ9YDQAAAFNwZWN0cnVt
IHZpZXdxEFgHAAAAc3RhY2tlZHERiFgLAAAAc3RyZWFtX25hbWVxElgAAAAAcRNYCgAAAGxpbmVf
Y29sb3JxFFgHAAAAIzAwMDAwMHEVWAsAAABkb3duc2FtcGxlZHEWiVgLAAAAYW50aWFsaWFzZWRx
F4l1Lg==
</properties>
		<properties format="pickle" node_id="15">gAN9cQAoWAoAAABvcmRlcl91bml0cQFYBwAAAHNhbXBsZXNxAlgTAAAAc2F2ZWRXaWRnZXRHZW9t
ZXRyeXEDY3NpcApfdW5waWNrbGVfdHlwZQpxBFgMAAAAUHlRdDQuUXRDb3JlcQVYCgAAAFFCeXRl
QXJyYXlxBkMuAdnQywABAAAAAAHzAAAA+wAAA2IAAAG9AAAB9wAAARIAAANeAAABuQAAAAAAAHEH
hXEIh3EJUnEKWAUAAABvcmRlcnELTegDWAQAAABheGlzcQxYBAAAAHRpbWVxDVgMAAAAb25seV9z
aWduYWxzcQ6IdS4=
</properties>
	</node_properties>
	<patch>{
    "nodes": {
        "node1": {
            "class": "LSLInput",
            "module": "neuropype.nodes.network",
            "params": {
                "query": {
                    "value": "type='EEG'",
                    "type": "StringPort",
                    "customized": false
                },
                "marker_query": {
                    "value": "",
                    "type": "StringPort",
                    "customized": false
                },
                "max_buflen": {
                    "value": 30,
                    "type": "IntPort",
                    "customized": false
                },
                "max_chunklen": {
                    "value": 0,
                    "type": "IntPort",
                    "customized": false
                },
                "max_blocklen": {
                    "value": 1024,
                    "type": "IntPort",
                    "customized": false
                },
                "recover": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                },
                "channel_names": {
                    "value": [],
                    "type": "Port",
                    "customized": true
                },
                "nominal_rate": {
                    "value": null,
                    "type": "Port",
                    "customized": false
                },
                "diagnostics": {
                    "value": null,
                    "type": "BoolPort",
                    "customized": true
                }
            }
        },
        "node2": {
            "class": "LSLOutput",
            "module": "neuropype.nodes.network",
            "params": {
                "stream_name": {
                    "value": "neuropype:RawData",
                    "type": "StringPort",
                    "customized": true
                },
                "stream_type": {
                    "value": "Control",
                    "type": "StringPort",
                    "customized": false
                },
                "source_id": {
                    "value": "oiuohih",
                    "type": "StringPort",
                    "customized": true
                },
                "srate": {
                    "value": null,
                    "type": "Port",
                    "customized": false
                },
                "chunk_len": {
                    "value": 0,
                    "type": "IntPort",
                    "customized": false
                },
                "max_buffered": {
                    "value": 60,
                    "type": "IntPort",
                    "customized": false
                },
                "only_signals": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": true
                },
                "send_markers": {
                    "value": null,
                    "type": "BoolPort",
                    "customized": true
                },
                "marker_name": {
                    "value": null,
                    "type": "StringPort",
                    "customized": true
                }
            }
        },
        "node3": {
            "class": "SelectRange",
            "module": "neuropype.nodes.general",
            "params": {
                "axis": {
                    "value": "time",
                    "type": "EnumPort",
                    "customized": false
                },
                "selection": {
                    "value": ":",
                    "type": "Port",
                    "customized": false
                },
                "unit": {
                    "value": "indices",
                    "type": "EnumPort",
                    "customized": false
                }
            }
        },
        "node4": {
            "class": "Rereferencing",
            "module": "neuropype.nodes.filters",
            "params": {
                "axis": {
                    "value": "space",
                    "type": "EnumPort",
                    "customized": false
                },
                "estimator": {
                    "value": "mean",
                    "type": "EnumPort",
                    "customized": false
                },
                "reference_range": {
                    "value": ":",
                    "type": "Port",
                    "customized": false
                },
                "reference_unit": {
                    "value": "names",
                    "type": "EnumPort",
                    "customized": false
                }
            }
        },
        "node5": {
            "class": "MovingWindowWelchSpectrum",
            "module": "neuropype.nodes.spectral",
            "params": {
                "window_length": {
                    "value": 2,
                    "type": "FloatPort",
                    "customized": false
                },
                "segment_samples": {
                    "value": 256,
                    "type": "IntPort",
                    "customized": false
                },
                "overlap_samples": {
                    "value": null,
                    "type": "Port",
                    "customized": false
                },
                "window": {
                    "value": "hann",
                    "type": "EnumPort",
                    "customized": false
                },
                "detrend": {
                    "value": "constant",
                    "type": "EnumPort",
                    "customized": false
                },
                "onesided": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                },
                "scaling": {
                    "value": "density",
                    "type": "EnumPort",
                    "customized": false
                }
            }
        },
        "node6": {
            "class": "FrequencyNormalization",
            "module": "neuropype.nodes.filters",
            "params": {}
        },
        "node7": {
            "class": "LSLOutput",
            "module": "neuropype.nodes.network",
            "params": {
                "stream_name": {
                    "value": "neuropype:Spectrum",
                    "type": "StringPort",
                    "customized": true
                },
                "stream_type": {
                    "value": "Control",
                    "type": "StringPort",
                    "customized": false
                },
                "source_id": {
                    "value": "ktrjfhpok",
                    "type": "StringPort",
                    "customized": true
                },
                "srate": {
                    "value": null,
                    "type": "Port",
                    "customized": false
                },
                "chunk_len": {
                    "value": 0,
                    "type": "IntPort",
                    "customized": false
                },
                "max_buffered": {
                    "value": 60,
                    "type": "IntPort",
                    "customized": false
                },
                "only_signals": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": true
                },
                "send_markers": {
                    "value": null,
                    "type": "BoolPort",
                    "customized": true
                },
                "marker_name": {
                    "value": null,
                    "type": "StringPort",
                    "customized": true
                }
            }
        },
        "node8": {
            "class": "IIRFilter",
            "module": "neuropype.nodes.filters",
            "params": {
                "axis": {
                    "value": "time",
                    "type": "EnumPort",
                    "customized": false
                },
                "order": {
                    "value": null,
                    "type": "IntPort",
                    "customized": true
                },
                "frequencies": {
                    "value": [
                        6,
                        8,
                        12,
                        15
                    ],
                    "type": "ListPort",
                    "customized": true
                },
                "mode": {
                    "value": "bandpass",
                    "type": "EnumPort",
                    "customized": false
                },
                "design": {
                    "value": "butter",
                    "type": "EnumPort",
                    "customized": false
                },
                "pass_loss": {
                    "value": 3.0,
                    "type": "FloatPort",
                    "customized": false
                },
                "stop_atten": {
                    "value": 40.0,
                    "type": "FloatPort",
                    "customized": false
                },
                "only_signals": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                }
            }
        },
        "node9": {
            "class": "Squaring",
            "module": "neuropype.nodes.elementwise",
            "params": {
                "only_signals": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                }
            }
        },
        "node10": {
            "class": "Shift",
            "module": "neuropype.nodes.elementwise",
            "params": {
                "offset": {
                    "value": 1.0,
                    "type": "FloatPort",
                    "customized": true
                },
                "only_signals": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                }
            }
        },
        "node11": {
            "class": "Logarithm",
            "module": "neuropype.nodes.elementwise",
            "params": {
                "only_signals": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                }
            }
        },
        "node12": {
            "class": "LSLOutput",
            "module": "neuropype.nodes.network",
            "params": {
                "stream_name": {
                    "value": "neuropype:AlphaPower",
                    "type": "StringPort",
                    "customized": true
                },
                "stream_type": {
                    "value": "Control",
                    "type": "StringPort",
                    "customized": false
                },
                "source_id": {
                    "value": "ejigoejio",
                    "type": "StringPort",
                    "customized": true
                },
                "srate": {
                    "value": null,
                    "type": "Port",
                    "customized": false
                },
                "chunk_len": {
                    "value": 0,
                    "type": "IntPort",
                    "customized": false
                },
                "max_buffered": {
                    "value": 60,
                    "type": "IntPort",
                    "customized": false
                },
                "only_signals": {
                    "value": false,
                    "type": "BoolPort",
                    "customized": false
                },
                "send_markers": {
                    "value": null,
                    "type": "BoolPort",
                    "customized": true
                },
                "marker_name": {
                    "value": null,
                    "type": "StringPort",
                    "customized": true
                }
            }
        },
        "node13": {
            "class": "DejitterTimestamps",
            "module": "neuropype.nodes.utilities",
            "params": {
                "forget_halftime": {
                    "value": 300,
                    "type": "FloatPort",
                    "customized": true
                },
                "force_monotonic": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                },
                "max_updaterate": {
                    "value": 500,
                    "type": "IntPort",
                    "customized": false
                },
                "warmup_samples": {
                    "value": -1,
                    "type": "IntPort",
                    "customized": false
                }
            }
        },
        "node14": {
            "class": "TimeSeriesPlot",
            "module": "neuropype.nodes.visualization",
            "params": {
                "stream_name": {
                    "value": "",
                    "type": "StringPort",
                    "customized": false
                },
                "scale": {
                    "value": 0.1,
                    "type": "FloatPort",
                    "customized": true
                },
                "time_range": {
                    "value": 5.0,
                    "type": "FloatPort",
                    "customized": false
                },
                "title": {
                    "value": "Time series view",
                    "type": "StringPort",
                    "customized": false
                },
                "background_color": {
                    "value": "#FFFFFF",
                    "type": "StringPort",
                    "customized": false
                },
                "line_color": {
                    "value": "#000000",
                    "type": "StringPort",
                    "customized": false
                },
                "zero_color": {
                    "value": "#7F7F7F7F",
                    "type": "StringPort",
                    "customized": false
                },
                "antialiased": {
                    "value": false,
                    "type": "BoolPort",
                    "customized": false
                },
                "downsampled": {
                    "value": false,
                    "type": "BoolPort",
                    "customized": false
                },
                "zeromean": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                },
                "autoscale": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                },
                "only_signals": {
                    "value": null,
                    "type": "BoolPort",
                    "customized": true
                },
                "initial_dims": {
                    "value": null,
                    "type": "ListPort",
                    "customized": true
                }
            }
        },
        "node15": {
            "class": "SpectrumPlot",
            "module": "neuropype.nodes.visualization",
            "params": {
                "stream_name": {
                    "value": "",
                    "type": "StringPort",
                    "customized": false
                },
                "scale": {
                    "value": 0.001,
                    "type": "FloatPort",
                    "customized": true
                },
                "stacked": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                },
                "title": {
                    "value": "Spectrum view",
                    "type": "StringPort",
                    "customized": false
                },
                "background_color": {
                    "value": "#FFFFFF",
                    "type": "StringPort",
                    "customized": false
                },
                "line_color": {
                    "value": "#000000",
                    "type": "StringPort",
                    "customized": false
                },
                "zero_color": {
                    "value": "#7F7F7F7F",
                    "type": "StringPort",
                    "customized": false
                },
                "antialiased": {
                    "value": false,
                    "type": "BoolPort",
                    "customized": false
                },
                "downsampled": {
                    "value": false,
                    "type": "BoolPort",
                    "customized": false
                },
                "initial_dims": {
                    "value": null,
                    "type": "ListPort",
                    "customized": true
                }
            }
        },
        "node16": {
            "class": "MovingAverage",
            "module": "neuropype.nodes.filters",
            "params": {
                "axis": {
                    "value": "time",
                    "type": "EnumPort",
                    "customized": false
                },
                "order": {
                    "value": 1000,
                    "type": "IntPort",
                    "customized": true
                },
                "order_unit": {
                    "value": null,
                    "type": "EnumPort",
                    "customized": true
                },
                "only_signals": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                }
            }
        },
        "node17": {
            "class": "MovingAverage",
            "module": "neuropype.nodes.filters",
            "params": {
                "axis": {
                    "value": "time",
                    "type": "EnumPort",
                    "customized": false
                },
                "order": {
                    "value": 1000,
                    "type": "IntPort",
                    "customized": true
                },
                "order_unit": {
                    "value": "samples",
                    "type": "EnumPort",
                    "customized": false
                },
                "only_signals": {
                    "value": true,
                    "type": "BoolPort",
                    "customized": false
                }
            }
        }
    },
    "edges": [
        [
            "node3",
            "data",
            "node4",
            "data"
        ],
        [
            "node4",
            "data",
            "node5",
            "data"
        ],
        [
            "node4",
            "data",
            "node8",
            "data"
        ],
        [
            "node5",
            "data",
            "node6",
            "data"
        ],
        [
            "node6",
            "data",
            "node7",
            "data"
        ],
        [
            "node6",
            "data",
            "node15",
            "data"
        ],
        [
            "node8",
            "data",
            "node9",
            "data"
        ],
        [
            "node9",
            "data",
            "node17",
            "data"
        ],
        [
            "node10",
            "data",
            "node11",
            "data"
        ],
        [
            "node11",
            "data",
            "node12",
            "data"
        ],
        [
            "node11",
            "data",
            "node14",
            "data"
        ],
        [
            "node1",
            "data",
            "node13",
            "data"
        ],
        [
            "node13",
            "data",
            "node2",
            "data"
        ],
        [
            "node13",
            "data",
            "node3",
            "data"
        ],
        [
            "node17",
            "data",
            "node10",
            "data"
        ]
    ]
}</patch>
</scheme>
